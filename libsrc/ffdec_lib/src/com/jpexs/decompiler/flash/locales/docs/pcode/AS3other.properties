# Copyright (C) 2010-2016 JPEXS, All rights reserved.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3.0 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library.
ui.list.heading = AVM2 p-code
ui.list.pageTitle = AVM2 p-code
ui.list.documentTitle = AVM2 p-code
ui.list.pageDescription = List of p-code settings


name.QName = Qualified Name
name.QNameA = Qualified Name of Attribute
name.RTQName = Runtime Qualified Name
name.RTQNameA = Runtime Qualified Name of Attribute
name.RTQNameL = Runtime Qualified Name Late
name.RTQNameLA = Runtime Qualified Name Late of Attribute
name.Multiname = Multiple Namespace Name
name.MultinameA = Multiple Namespace Name of Attribute
name.MultinameL = Multiple Namespace Name Late
name.MultinameLA = Multiple Namespace Name Late of Attribute
name.TypeName = Type Name

namespacekind.Namespace = Namespace
namespacekind.PrivateNamespace = Private Namespace
namespacekind.PackageNamespace = Package Namespace
namespacekind.PackageInternalNs = Package Internal Namespace
namespacekind.ProtectedNamespace = Protected Namespace
namespacekind.ExplicitNamespace = Explicit Namespace
namespacekind.StaticProtectedNs = Static Protected Namespace

trait = Trait
#types:
trait.method = Trait of type method
trait.slot = Trait of type slot
trait.const = Trait of type const
trait.method = Trait of type method
trait.setter = Trait of type setter
trait.getter = Trait of type getter
trait.class = Trait of type class
trait.function = Trait of type function

trait.metadata = Metadata
trait.metadata.item = One metadata item
trait.metadata.end = End of metadata

trait.flag = Trait flag
trait.flag.METADATA = Trait has metadata attached
trait.flag.FINAL = Trais if final
trait.flag.OVERRIDE = Trait overrides parent

#method/getter/setter
trait.dispid = Dispatch id
#slot/const/class/function  
trait.slotid = Slot id

trait.type = Type of trait
trait.value = Default value for a trait

method = Method
method.name = Name of the method
method.flag = Method flag
method.flag.NEED_ARGUMENTS = Create "arguments" object in register method_info.param_count+1
method.flag.NEED_ACTIVATION = This method uses newactivation instruction
method.flag.NEED_REST = Create rest arguments array in register method_info.param_count+1
method.flag.HAS_OPTIONAL = This method has optional arguments
method.flag.IGNORE_REST = ??
method.flag.EXPLICIT = ??
method.flag.SETSDXNS = This method uses dxns or dxnslate instructions
method.flag.HAS_PARAMNAMES = This method has parameter names in method_info
method.param = Type of parameter
method.paramname = Name of parameter
method.optional = Default value for optional parameter
method.returns = Return type of method
method.body = Body of method
method.body.maxstack = Maximum number of stack slots at any point of execution
method.body.localcount = Index of highest-numbered local register plus one
method.body.initscopedepth = Minimum scope depth (relative to maxscopedepth) that may be accessed
method.body.maxscopedepth = Maximum scope depth that may be accessed
method.body.try = Exception block
method.body.try.from = Starting position from which exception is enabled
method.body.try.to = Ending position after which the exception is disabled
method.body.try.target = Position to which control should jump if exception of this type is thrown
method.body.try.type = Type of catched exception
method.body.try.name = Name of the exception object
method.body.code = Code of the method body
method.body.trait = Trait of the method body
